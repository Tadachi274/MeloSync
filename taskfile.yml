dotenv:
  - ".env"

version: "3"

vars:
  MIGRATIONS_DIR: infra/db/migrations
  COMPOSE_PROJECT_NAME: melo-sync

tasks:
  compose-up:
    cmds:
      - docker compose -p {{.COMPOSE_PROJECT_NAME}} up -d
    silent: true
  compose-down:
    cmds:
      - docker compose -p {{.COMPOSE_PROJECT_NAME}} down
    silent: true

  run-main-server:
    dir: ./main_server
    env:
      DB_USER: '{{.DB_USER}}'
      DB_PASSWORD: '{{.DB_PASSWORD}}'
      DB_NAME: '{{.DB_NAME}}'
      DB_HOST: '{{.DB_HOST}}'
      DB_PORT: '{{.DB_PORT}}'
      PORT: '8080'
    cmds:
      - DB_HOST=localhost DB_PORT=5433 DB_USER=user DB_PASSWORD=password DB_NAME=devdb go run ./cmd/main.go

  run-jwt-server:
    dir: ./auth_server
    cmds:
      - uvicorn return_jwt:app --reload --host 0.0.0.0 --port 8000

  run-auth-server:
    dir: ./auth_server
    cmds:
      - uvicorn auth_api:app --reload --host 0.0.0.0 --port 8000


  run-spotify-auth:
    dir: ./auth_server
    cmds:
      - uvicorn get_code:app --host 0.0.0.0 --port 8001 --reload

  run-get-save-accesstoken:
    dir: ./auth_server
    cmds:
      - uvicorn get_save_accesstoken:app --host 0.0.0.0 --port 8002 --reload

  run-spotify-server:
    dir: ./spotify_test
    cmds:
      - uvicorn spotify_api:app --host 0.0.0.0 --port 8003 --reload

  run-AI-server:
    dir: ./backend_server/api
    cmds:
      - uvicorn playlist_api:app --host 0.0.0.0 --port 8004 --reload
  

  install-dev-tools:
    cmds:
      - go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
  
  local-migrate-up:
    desc: Apply all pending database migrations
    cmds:
      - migrate -database "{{.LOCAL_DB_URL}}" -path {{.MIGRATIONS_DIR}} up

  local-migrate-down:
    desc: Roll back the last applied migration
    cmds:
      - migrate -database "{{.LOCAL_DB_URL}}" -path {{.MIGRATIONS_DIR}} down 1

  remote-migrate-up:
    desc: Apply all pending database migrations
    cmds:
      - migrate -database "{{.EXTERNAL_DB_URL}}" -path {{.MIGRATIONS_DIR}} up

  remote-migrate-down:
    desc: Roll back the last applied migration
    cmds:
      - migrate -database "{{.EXTERNAL_DB_URL}}" -path {{.MIGRATIONS_DIR}} down 1

  migrate-create:
    desc: Create new migration files
    cmds:
      - migrate create -ext sql -dir {{.MIGRATIONS_DIR}} {{.CLI_ARGS}}
    requires:
      vars: [CLI_ARGS]

  seed:
    desc: Populate the local database with seed data using Go script
    dir: infra/db/seed
    cmds:
      - go mod tidy
      - DB_HOST=localhost DB_PORT=5433 DB_USER=user DB_PASSWORD=password DB_NAME=devdb go run seed.go







